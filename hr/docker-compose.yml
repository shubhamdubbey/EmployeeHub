version: '3.8'

services:
  # PostgreSQL database service
  postgres_db:
    image: postgres:15.14-bookworm
    container_name: postgres_db
    environment:
      POSTGRES_DB: human-resource
      POSTGRES_USER: human-resource
      POSTGRES_PASSWORD: human-resource
    networks:
      - human-resource-network
    ports:
      - "5432:5432"
    volumes:
      - human-resource-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U human-resource -d human-resource"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis service
  redis:
    image: redis:7
    container_name: redis
#    command: ["redis-server", "--bind", "0.0.0.0"]
    ports:
      - "6379:6379"
    networks:
      - human-resource-network
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # Spring Boot application service
  human_resource_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: human_resource-app:v1
    container_name: human_resource_app
    ports:
      - "8090:8090"
    environment:
      # Database connection
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/human-resource
      SPRING_DATASOURCE_USERNAME: human-resource
      SPRING_DATASOURCE_PASSWORD: human-resource

      # Redis connection
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

      # Application port
      SERVER_PORT: 8090

      # JPA/Hibernate
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

    depends_on:
      - postgres_db
      - redis
    networks:
      - human-resource-network

networks:
  human-resource-network:
    driver: bridge

volumes:
  human-resource-db: